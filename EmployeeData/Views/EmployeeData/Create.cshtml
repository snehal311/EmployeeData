@model EmployeeData.Models.EmployeesDetails

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<h3 class="text-success">@ViewData["Message"]</h3>

@using (Html.BeginForm("Create", "EmployeeData", FormMethod.Post, new { enctype = "multipart/form-data", @id="myform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EmployeesDetails</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(model => model.EmpId);

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Designation", Enum.GetValues(typeof(EmployeeData.Models.Designations)).Cast<EmployeeData.Models.Designations>().Select(d => new SelectListItem
           {
               Value = d.ToString(),
               Text = d.ToString()
           }),
               "Select Designation", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control",@id="phoneno" } })
                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RegionId, (SelectList)ViewBag.Regions, "Select Region", new { id = "regionDropdown" })
                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZoneId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="zoneDropdown" name="ZoneId" class="form-control" required>
                    <option>Select Zone</option>
                </select>
                @Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger", @id="validateZone" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BranchId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="branchDropdown" name="BranchId" class="form-control" required>
                    <option>Select Branch</option>
                </select>
                @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger",@id="validateBranch" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", max = DateTime.Now.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Male: @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })
                Female: @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Technology, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var tech in Enum.GetValues(typeof(EmployeeData.Models.Technologies)))
                {
                    <label>@tech</label>
                    <input type="checkbox" name="Technology" value=@tech />
                }
                @Html.ValidationMessageFor(model => model.Technology, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Documents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="Documents" multiple />
                @Html.ValidationMessageFor(model => model.Documents, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="Apply" value="Create" class="btn btn-default" />

            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ListEmployee")
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('#regionDropdown').change(function () {
            var regionId = $(this).val();
            $.getJSON('/EmployeeData/GetZones', { RegionId: regionId }, function (data) {
                var zoneDropdown = $('#zoneDropdown');
                zoneDropdown.empty();
                zoneDropdown.append($('<option>').text('Select Zone'));
                $.each(data, function (index, zone) {
                    zoneDropdown.append($('<option>').text(zone.ZoneName).val(zone.ZoneId));
                });
            });
        });

        $('#zoneDropdown').change(function () {
            var zoneId = $(this).val();
            $.getJSON('/EmployeeData/GetBranches', { zoneId: zoneId }, function (data) {
                var brachDropdown = $('#branchDropdown');
                brachDropdown.empty();
                brachDropdown.append($('<option>').text('Select Branch'));
                $.each(data, function (index, branch) {
                    brachDropdown.append($('<option>').text(branch.BranchName).val(branch.BranchId));
                });
            });
        });

    });


</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
